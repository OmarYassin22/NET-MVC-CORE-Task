 @using ARIBApp.Core.Enum

<form asp-action="UpdateTaskStatus" method="post" data-ajax="true">
    <div id="form-alert-container">
        @if (!ViewContext.ModelState.IsValid)
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <h5 class="alert-heading">
                    <i class="bi bi-exclamation-triangle-fill me-2"></i>
                    Please correct the errors below:
                </h5>
                <ul class="mb-0 mt-2">
                    @foreach (var modelState in ViewContext.ModelState.Values)
                    {
                        foreach (var error in modelState.Errors)
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    }
                </ul>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
    </div>

    <input type="hidden" name="taskId" value="@ViewBag.TaskId" />

    <div class="card mb-4">
        <div class="card-header bg-light">
            <h5 class="mb-0">@ViewBag.TaskTitle</h5>
        </div>
        <div class="card-body">
            <div class="mb-3">
                <label class="form-label">Current Status</label>
                <div>
                    @switch (ViewBag.CurrentStatus)
                    {
                        case TaskState.Pending:
                            <span class="badge bg-warning">Pending</span>
                            break;
                        case TaskState.InProgress:
                            <span class="badge bg-primary">In Progress</span>
                            break;
                        case TaskState.Completed:
                            <span class="badge bg-success">Completed</span>
                            break;
                        case TaskState.Failed:
                            <span class="badge bg-danger">Failed</span>
                            break;
                        case TaskState.Cancelled:
                            <span class="badge bg-secondary">Cancelled</span>
                            break;
                        default:
                            <span class="badge bg-secondary">Unknown</span>
                            break;
                    }
                </div>
            </div>

            <div class="mb-3">
                <label for="newStatus" class="form-label">New Status</label>
                <select id="newStatus" name="newStatus" class="form-select" required>
                    <option value="">-- Select New Status --</option>
                    @foreach (var option in ViewBag.StatusOptions)
                    {
                        <option value="@option.Value">@option.Text</option>
                    }
                </select>
            </div>
        </div>
    </div>

    <div class="mt-3">
        <button type="submit" class="btn btn-primary">
            <i class="bi bi-check2-circle me-1"></i> Update Status
        </button>
        <a asp-action="EmployeeDashboard" class="btn btn-secondary" data-ajax="true" data-target="#main-content">
            <i class="bi bi-arrow-left me-1"></i> Cancel
        </a>
    </div>
</form>

<script>
    document.querySelector('form[data-ajax="true"]').addEventListener('submit', function(e) {
        e.preventDefault();

         document.getElementById('ajax-loading').style.display = 'block';

        const formData = new FormData(this);

        fetch('@Url.Action("UpdateTaskStatus")', {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
             document.getElementById('ajax-loading').style.display = 'none';

            if (data.success) {
 e                document.getElementById('successToastBody').textContent = data.message;
                var successToast = new bootstrap.Toast(document.getElementById('successToast'));
                successToast.show();

                 if (data.redirectUrl) {
                    AjaxHandler.loadContent(data.redirectUrl, '#main-content');
                }
            } else {
                 const alertContainer = document.getElementById('form-alert-container');
                let alertHtml = `
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <h5 class="alert-heading">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>
                            ${data.message}
                        </h5>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>`;

                alertContainer.innerHTML = alertHtml;
            }
        })
        .catch(error => {
             document.getElementById('ajax-loading').style.display = 'none';

             document.getElementById('errorToastBody').textContent = "An error occurred while processing your request.";
            var errorToast = new bootstrap.Toast(document.getElementById('errorToast'));
            errorToast.show();
        });
    });
</script>